library 's:\core\library': fncmdkey,fntos,fnacs,fntxt,fnlbl
semp=1
editmode=0
dim resp$(20)*128
	fnTos(sn$="prinput-4")
	respc=0 : mylen=20 : rc=0
	fnLbl(1,1,"Employee Number: "&str$(eno),60,2,0)
	fnLbl(2,1,"Employee Name: "&rtrm$(em$),60,2,0)
	fnLbl(3,1,"Department Number: "&str$(dep)&" "&trim$(deptname$),60,2,0)
	fnLbl(5,1,"Regular Hours:",mylen,1,0)
	fnTxt(5,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(1))
	fnLbl(6,1,"Overtime Hours:",mylen,1,0)
	fnTxt(6,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(2))
	fnLbl(7,1,"Sick Hours:",mylen,1,0)
	fnTxt(7,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(3))
	fnLbl(8,1,"Vacation Hours:",mylen,1,0)
	fnTxt(8,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(4))
	fnLbl(9,1,"Holiday Hours:",mylen,1,0)
	fnTxt(9,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(5))
	fnLbl(10,1,"Salary:",mylen,1,0)
	fnTxt(10,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(6))
	fnLbl(11,1,"Other Compensation:",mylen,1,0)
	fnTxt(11,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(7))
	fnLbl(12,1,"Meals:",mylen,1,0)
	fnTxt(12,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(8))
	fnLbl(13,1,"Tips:",mylen,1,0)
	fnTxt(13,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(inpX(9))
	fnLbl(15,1,"Reg Hourly Rate:",mylen,1,0)
	fnTxt(15,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(hr(1))
	fnLbl(16,1,"O/T Hourly Rate:",mylen,1,0)
	fnTxt(16,mylen+2,12,0,1,"10",0,".")
	resp$(rc+=1)=str$(hr(2))
	fnCmdKey("&Next",1,1,0,"Record this time" )
	if editmode=0 then let fnCmdKey("&Skip Department F2",2,0,0,"Skips this department.")
	if editmode=0 and semp>=1 then let fnCmdKey("&Prev Department",12,0,0,"Go back to last department.")
	if editmode=1 then let fnCmdKey("&Delete Department",10,0,0,"Deletes the hours, etc for this department.")
	if editmode=0 then let fnCmdKey("&Track Hours",8,0,0,"Track hours other than those entered above.")
	fnCmdKey("&Make Changes Permanent",3,0,0,"Makes any rate changes or other deductions changes permanent in the employee record.")
	if editmode=0 then let fnCmdKey("E&xit",5,0,1,"Returns to menu")
	if editmode=1 then let fnCmdKey("&Finish",7,0,1,"Finished making corrections")
	fnAcs(sn$,0,mat resp$,ckey) ! ask time