90124 PACK: ! Pack Data Functions
90126 ! 
90128     DIM SCREENDATA$(1)*255
90130     DIM SCREENLONGDATA$(1)*2047
90132     DIM SCREENDATA(1)
90134 ! 
90136     DEF FNPUSHDATA(;ALTSTACK,WIPE)
90138        IF ALTSTACK<>2 THEN 
90140           LET FNPUSH$(MAT PASSEDINF$,ALTSTACK,WIPE)
90142           LET FNPUSH(MAT PASSEDINF,ALTSTACK,WIPE)
90144           LET FNPUSH$(MAT S$,ALTSTACK,WIPE)
90146           LET FNPUSH$(MAT F$,ALTSTACK,WIPE)
90148           LET FNPUSH(MAT F,ALTSTACK,WIPE)
90150           LET FNPUSH$(MAT FIELDSSSUBS$,ALTSTACK,WIPE)
90152           LET FNPUSH$(MAT FIELDSNSUBS$,ALTSTACK,WIPE)
90154           LET FNPUSH$(MAT SCREENSUBS$,ALTSTACK,WIPE)
90156           LET FNPUSH$(MAT FORM$,ALTSTACK,WIPE)
90158           LET FNPUSH(MAT S_SUBS,ALTSTACK,WIPE)
90160           LET FNPUSHVALUE$(TEMPDATA$,ALTSTACK,WIPE)
90162 ! 
90164           LET FNPUSH$(MAT TEMP_S_SPEC$,ALTSTACK,WIPE)
90166           LET FNPUSH(MAT OLD_DATA,ALTSTACK,WIPE)
90168           LET FNPUSH$(MAT RLV_SAVEREADDATA$,ALTSTACK,WIPE)
90170        END IF 
90172 ! 
90174        LET FNPUSH(MAT SELECTEDRECORDS,ALTSTACK,WIPE)
90176        LET FNPUSH$(MAT SELECTEDKEYS$,ALTSTACK,WIPE)
90178        LET FNPUSH$(MAT SAVE_S$,ALTSTACK,WIPE)
90180        LET FNPUSH(MAT SAVE_F,ALTSTACK,WIPE)
90182        LET FNPUSH$(MAT SAVE_F$,ALTSTACK,WIPE)
90184 ! 
90186        LET FNPUSH(MAT SAVE_S_SUBS,ALTSTACK,WIPE)
90188        LET FNPUSH$(MAT SAVE_S_DATA$,ALTSTACK,WIPE)
90190        LET FNPUSH(MAT CHANGED_S_SUBS,ALTSTACK,WIPE)
90192        LET FNPUSH$(MAT CHANGED_S_DATA$,ALTSTACK,WIPE)
90194        LET FNPUSH(MAT OTHER_S_SUBS,ALTSTACK,WIPE)
90196        LET FNPUSH$(MAT OTHER_S_DATA$,ALTSTACK,WIPE)
90198        LET FNPUSH(MAT OTHERCHANGED_S_SUBS,ALTSTACK,WIPE)
90200        LET FNPUSH$(MAT OTHERCHANGED_S_DATA$,ALTSTACK,WIPE)
90202        LET FNPUSH(MAT READ_F,ALTSTACK,WIPE)
90204        LET FNPUSH$(MAT READ_F$,ALTSTACK,WIPE)
90206        LET FNPUSH$(MAT CONTROLSPEC$,ALTSTACK,WIPE)
90208 ! 
90210        LET FNPUSHSCREEN(MAT SCREENIO$, MAT SCREENIO, MAT CONTROLNAME$,MAT FIELDNAME$,MAT DESCRIPTION$,MAT VPOSITION,MAT HPOSITION,MAT FIELDTYPE$,MAT SPECWIDTH,MAT WIDTH,MAT HEIGHT,MAT TRUEVALUE$,MAT FALSEVALUE$,MAT FUNCTION$,MAT PICTURE$,MAT PARENT$,MAT FGCOLOR$,MAT BGCOLOR$,MAT JUSTIFY$, MAT ATTR$, MAT PROTECTED, MAT INVISIBLE, MAT TOOLTIP$, MAT CNVRTIN$, MAT CNVRTOUT$, MAT MULTISELECT, MAT USERDATA$, MAT GRIDLINES,ALTSTACK,WIPE)
90212     FNEND 
90214     DEF FNPOPDATA(;ALTSTACK)
90216        LET FNPOPSCREEN(MAT SCREENIO$, MAT SCREENIO, MAT CONTROLNAME$,MAT FIELDNAME$,MAT DESCRIPTION$,MAT VPOSITION,MAT HPOSITION,MAT FIELDTYPE$,MAT SPECWIDTH,MAT WIDTH,MAT HEIGHT,MAT TRUEVALUE$,MAT FALSEVALUE$,MAT FUNCTION$,MAT PICTURE$,MAT PARENT$,MAT FGCOLOR$,MAT BGCOLOR$,MAT JUSTIFY$, MAT ATTR$, MAT PROTECTED, MAT INVISIBLE, MAT TOOLTIP$, MAT CNVRTIN$, MAT CNVRTOUT$, MAT MULTISELECT, MAT USERDATA$, MAT GRIDLINES,ALTSTACK)
90218 ! 
90220        LET FNPOP$(MAT CONTROLSPEC$,ALTSTACK)
90222        LET FNPOP$(MAT READ_F$,ALTSTACK)
90224        LET FNPOP(MAT READ_F,ALTSTACK)
90226        LET FNPOP$(MAT OTHERCHANGED_S_DATA$,ALTSTACK)
90228        LET FNPOP(MAT OTHERCHANGED_S_SUBS,ALTSTACK)
90230        LET FNPOP$(MAT OTHER_S_DATA$,ALTSTACK)
90232        LET FNPOP(MAT OTHER_S_SUBS,ALTSTACK)
90234        LET FNPOP$(MAT CHANGED_S_DATA$,ALTSTACK)
90236        LET FNPOP(MAT CHANGED_S_SUBS,ALTSTACK)
90238        LET FNPOP$(MAT SAVE_S_DATA$,ALTSTACK)
90240        LET FNPOP(MAT SAVE_S_SUBS,ALTSTACK)
90242 ! 
90244        LET FNPOP$(MAT SAVE_F$,ALTSTACK)
90246        LET FNPOP(MAT SAVE_F,ALTSTACK)
90248        LET FNPOP$(MAT SAVE_S$,ALTSTACK)
90250        LET FNPOP$(MAT SELECTEDKEYS$,ALTSTACK)
90252        LET FNPOP(MAT SELECTEDRECORDS,ALTSTACK)
90254 ! 
90256        IF ALTSTACK<>2 THEN 
90258           LET FNPOP$(MAT RLV_SAVEREADDATA$,ALTSTACK)
90260           LET FNPOP(MAT OLD_DATA,ALTSTACK)
90262           LET FNPOP$(MAT TEMP_S_SPEC$,ALTSTACK)
90264 ! 
90266           LET FNPOPVALUE$(TEMPDATA$,ALTSTACK)
90268           LET FNPOP(MAT S_SUBS,ALTSTACK)
90270           LET FNPOP$(MAT FORM$,ALTSTACK)
90272           LET FNPOP$(MAT SCREENSUBS$,ALTSTACK)
90274           LET FNPOP$(MAT FIELDSNSUBS$,ALTSTACK)
90276           LET FNPOP$(MAT FIELDSSSUBS$,ALTSTACK)
90278           LET FNPOP(MAT F,ALTSTACK)
90280           LET FNPOP$(MAT F$,ALTSTACK)
90282           LET FNPOP$(MAT S$,ALTSTACK)
90284           LET FNPOP(MAT PASSEDINF,ALTSTACK)
90286           LET FNPOP$(MAT PASSEDINF$,ALTSTACK)
90288        END IF 
90290     FNEND 
90292 ! 
90294     DEF FNPUSHSCREEN(MAT SCREENIO$, MAT SCREENIO, MAT CONTROLNAME$,MAT FIELDNAME$,MAT DESCRIPTION$,MAT VPOSITION,MAT HPOSITION,MAT FIELDTYPE$,MAT SPECWIDTH,MAT WIDTH,MAT HEIGHT,MAT TRUEVALUE$,MAT FALSEVALUE$,MAT FUNCTION$,MAT PICTURE$,MAT PARENT$,MAT FGCOLOR$,MAT BGCOLOR$,MAT JUSTIFY$, MAT ATTR$, MAT PROTECTED, MAT INVISIBLE, MAT TOOLTIP$, MAT CNVRTIN$, MAT CNVRTOUT$, MAT MULTISELECT, MAT USERDATA$, MAT GRIDLINES;ALTSTACK,WIPE,___,STACK1,STACK2,STACK3)
90296 ! 
90298        IF ALTSTACK=1 THEN 
90300           LET STACK1=UDIM(MAT UNDOSTACK$)
90302           LET STACK2=UDIM(MAT UNDOLONGSTACK$)
90304           LET STACK3=UDIM(MAT UNDOSTACK)
90306        END IF 
90308 ! 
90310        IF ALTSTACK<>2 THEN 
90312           LET FNPUSH$(MAT CONTROLNAME$,ALTSTACK,WIPE)
90314           LET FNPUSH$(MAT FIELDNAME$,ALTSTACK,WIPE)
90316           LET FNPUSH$(MAT FUNCTION$,ALTSTACK,WIPE)
90318           LET FNPUSH$(MAT CNVRTIN$,ALTSTACK,WIPE)
90320           LET FNPUSH(MAT SPECWIDTH,ALTSTACK,WIPE)
90322        END IF 
90324 ! 
90326        LET FNPUSH$(MAT SCREENIO$,ALTSTACK,WIPE)
90328        LET FNPUSH(MAT SCREENIO,ALTSTACK,WIPE)
90330        LET FNPUSH$(MAT DESCRIPTION$,ALTSTACK,WIPE)
90332        LET FNPUSH(MAT VPOSITION,ALTSTACK,WIPE)
90334        LET FNPUSH(MAT HPOSITION,ALTSTACK,WIPE)
90336        LET FNPUSH$(MAT FIELDTYPE$,ALTSTACK,WIPE)
90338        LET FNPUSH(MAT WIDTH,ALTSTACK,WIPE)
90340        LET FNPUSH(MAT HEIGHT,ALTSTACK,WIPE)
90342        LET FNPUSH$(MAT TRUEVALUE$,ALTSTACK,WIPE)
90344        LET FNPUSH$(MAT FALSEVALUE$,ALTSTACK,WIPE)
90346        LET FNPUSH$(MAT PICTURE$,ALTSTACK,WIPE)
90348        LET FNPUSH$(MAT PARENT$,ALTSTACK,WIPE)
90350        LET FNPUSH$(MAT FGCOLOR$,ALTSTACK,WIPE)
90352        LET FNPUSH$(MAT BGCOLOR$,ALTSTACK,WIPE)
90354        LET FNPUSH$(MAT JUSTIFY$,ALTSTACK,WIPE)
90356        LET FNPUSH$(MAT ATTR$,ALTSTACK,WIPE)
90358        LET FNPUSH(MAT PROTECTED,ALTSTACK,WIPE)
90360        LET FNPUSH(MAT INVISIBLE,ALTSTACK,WIPE)
90362        LET FNPUSH$(MAT TOOLTIP$,ALTSTACK,WIPE)
90364        LET FNPUSH$(MAT CNVRTOUT$,ALTSTACK,WIPE)
90366        LET FNPUSH(MAT MULTISELECT,ALTSTACK,WIPE)
90368        LET FNPUSH(MAT GRIDLINES,ALTSTACK,WIPE)
90370        LET FNPUSH$(MAT USERDATA$,ALTSTACK,WIPE)
90372        LET FNPUSH$(MAT S_OLD$,ALTSTACK,WIPE)
90374        LET FNPUSH$(MAT S_DATA$,ALTSTACK,WIPE)
90376        LET FNPUSH(MAT S_DATA,ALTSTACK,WIPE)
90378        LET FNPUSH$(MAT S_SPEC$,ALTSTACK,WIPE)
90380        LET FNPUSH$(MAT FRAMEKEYS$,ALTSTACK,WIPE)
90382        LET FNPUSH$(MAT FRAMESPECCONTROL$,ALTSTACK,WIPE)
90384        LET FNPUSH(MAT FRAMEWINDOWS,ALTSTACK,WIPE)
90386        LET FNPUSH$(MAT SCREENKEYS$,ALTSTACK,WIPE)
90388        LET FNPUSH(MAT SCREENWINDOWS,ALTSTACK,WIPE)
90390 ! 
90392        IF ALTSTACK=1 THEN 
90394           IF UDIM(MAT SIZE1)=0 OR UDIM(MAT SIZE2)=0 OR UDIM(MAT SIZE3)=0 OR SIZE1(UDIM(MAT SIZE1))+SIZE2(UDIM(MAT SIZE2))+SIZE3(UDIM(MAT SIZE3)) THEN 
90396              MAT SIZE1(UDIM(MAT SIZE1)+1)
90398              MAT SIZE2(UDIM(MAT SIZE1))
90400              MAT SIZE3(UDIM(MAT SIZE1))
90402           END IF 
90404 ! 
90406           LET SIZE1(UDIM(MAT SIZE1))=UDIM(MAT UNDOSTACK$)-STACK1
90408           LET SIZE2(UDIM(MAT SIZE1))=UDIM(MAT UNDOLONGSTACK$)-STACK2
90410           LET SIZE3(UDIM(MAT SIZE1))=UDIM(MAT UNDOSTACK)-STACK3
90412        END IF 
90414     FNEND 
90416 ! 
90418     DEF FNPOPSCREEN(MAT SCREENIO$, MAT SCREENIO, MAT CONTROLNAME$,MAT FIELDNAME$,MAT DESCRIPTION$,MAT VPOSITION,MAT HPOSITION,MAT FIELDTYPE$,MAT SPECWIDTH,MAT WIDTH,MAT HEIGHT,MAT TRUEVALUE$,MAT FALSEVALUE$,MAT FUNCTION$,MAT PICTURE$,MAT PARENT$,MAT FGCOLOR$,MAT BGCOLOR$,MAT JUSTIFY$, MAT ATTR$, MAT PROTECTED, MAT INVISIBLE, MAT TOOLTIP$, MAT CNVRTIN$, MAT CNVRTOUT$, MAT MULTISELECT, MAT USERDATA$, MAT GRIDLINES;ALTSTACK)
90420        LET FNPOP(MAT SCREENWINDOWS,ALTSTACK)
90422        LET FNPOP$(MAT SCREENKEYS$,ALTSTACK)
90424        LET FNPOP(MAT FRAMEWINDOWS,ALTSTACK)
90426        LET FNPOP$(MAT FRAMESPECCONTROL$,ALTSTACK)
90428        LET FNPOP$(MAT FRAMEKEYS$,ALTSTACK)
90430        LET FNPOP$(MAT S_SPEC$,ALTSTACK)
90432        LET FNPOP(MAT S_DATA,ALTSTACK)
90434        LET FNPOP$(MAT S_DATA$,ALTSTACK)
90436        LET FNPOP$(MAT S_OLD$,ALTSTACK)
90438        LET FNPOP$(MAT USERDATA$,ALTSTACK)
90440        LET FNPOP(MAT GRIDLINES,ALTSTACK)
90442        LET FNPOP(MAT MULTISELECT,ALTSTACK)
90444        LET FNPOP$(MAT CNVRTOUT$,ALTSTACK)
90446        LET FNPOP$(MAT TOOLTIP$,ALTSTACK)
90448        LET FNPOP(MAT INVISIBLE,ALTSTACK)
90450        LET FNPOP(MAT PROTECTED,ALTSTACK)
90452        LET FNPOP$(MAT ATTR$,ALTSTACK)
90454        LET FNPOP$(MAT JUSTIFY$,ALTSTACK)
90456        LET FNPOP$(MAT BGCOLOR$,ALTSTACK)
90458        LET FNPOP$(MAT FGCOLOR$,ALTSTACK)
90460        LET FNPOP$(MAT PARENT$,ALTSTACK)
90462        LET FNPOP$(MAT PICTURE$,ALTSTACK)
90464        LET FNPOP$(MAT FALSEVALUE$,ALTSTACK)
90466        LET FNPOP$(MAT TRUEVALUE$,ALTSTACK)
90468        LET FNPOP(MAT HEIGHT,ALTSTACK)
90470        LET FNPOP(MAT WIDTH,ALTSTACK)
90472        LET FNPOP$(MAT FIELDTYPE$,ALTSTACK)
90474        LET FNPOP(MAT HPOSITION,ALTSTACK)
90476        LET FNPOP(MAT VPOSITION,ALTSTACK)
90478        LET FNPOP$(MAT DESCRIPTION$,ALTSTACK)
90480        LET FNPOP(MAT SCREENIO,ALTSTACK)
90482        LET FNPOP$(MAT SCREENIO$,ALTSTACK)
90484 ! 
90486        IF ALTSTACK<>2 THEN 
90488           LET FNPOP(MAT SPECWIDTH,ALTSTACK)
90490           LET FNPOP$(MAT CNVRTIN$,ALTSTACK)
90492           LET FNPOP$(MAT FUNCTION$,ALTSTACK)
90494           LET FNPOP$(MAT FIELDNAME$,ALTSTACK)
90496           LET FNPOP$(MAT CONTROLNAME$,ALTSTACK)
90498        END IF 
90500 ! 
90502        IF ALTSTACK=1 THEN 
90504           MAT SIZE1(UDIM(MAT SIZE1)-1)
90506           MAT SIZE2(UDIM(MAT SIZE1))
90508           MAT SIZE3(UDIM(MAT SIZE1))
90510        END IF 
90512     FNEND 
90514 ! 
90516     DEF FNPUSH$(MAT ARRAY$;ALTSTACK,WIPE)
90518        IF ALTSTACK=1 THEN 
90520           LET FNPUSH$=FNPUSHARRAY$(MAT ARRAY$,MAT UNDOSTACK$,MAT UNDOLONGSTACK$)
90522        ELSE IF ALTSTACK=2 THEN 
90524           LET FNPUSH$=FNPUSHARRAY$(MAT ARRAY$,MAT SCREENDATA$,MAT SCREENLONGDATA$)
90526        ELSE 
90528           LET FNPUSH$=FNPUSHARRAY$(MAT ARRAY$,MAT STACK$,MAT LONGSTACK$)
90530        END IF 
90532        IF WIPE THEN 
90534           MAT ARRAY$(0)
90536        END IF 
90538     FNEND 
90540     DEF FNPOP$(MAT ARRAY$;ALTSTACK)
90542        IF ALTSTACK=1 THEN 
90544           LET FNPOP$=FNPOPARRAY$(MAT ARRAY$,MAT UNDOSTACK$,MAT UNDOLONGSTACK$)
90546        ELSE IF ALTSTACK=2 THEN 
90548           LET FNPOP$=FNPOPARRAY$(MAT ARRAY$,MAT SCREENDATA$,MAT SCREENLONGDATA$)
90550        ELSE 
90552           LET FNPOP$=FNPOPARRAY$(MAT ARRAY$,MAT STACK$,MAT LONGSTACK$)
90554        END IF 
90556     FNEND 
90558     DEF FNPUSH(MAT ARRAY;ALTSTACK,WIPE)
90560        IF ALTSTACK=1 THEN 
90562           LET FNPUSH=FNPUSHARRAY(MAT ARRAY,MAT UNDOSTACK)
90564        ELSE IF ALTSTACK=2 THEN 
90566           LET FNPUSH=FNPUSHARRAY(MAT ARRAY,MAT SCREENDATA)
90568        ELSE 
90570           LET FNPUSH=FNPUSHARRAY(MAT ARRAY,MAT STACK)
90572        END IF 
90574        IF WIPE THEN 
90576           MAT ARRAY(0)
90578        END IF 
90580     FNEND 
90582     DEF FNPOP(MAT ARRAY;ALTSTACK)
90584        IF ALTSTACK=1 THEN 
90586           LET FNPOP=FNPOPARRAY(MAT ARRAY,MAT UNDOSTACK)
90588        ELSE IF ALTSTACK=2 THEN 
90590           LET FNPOP=FNPOPARRAY(MAT ARRAY,MAT SCREENDATA)
90592        ELSE 
90594           LET FNPOP=FNPOPARRAY(MAT ARRAY,MAT STACK)
90596        END IF 
90598     FNEND 
90600 ! 
90602     DIM PUSHVALUE$(1)*2047,PUSHVALUE(1)
90604     DEF FNPUSHVALUE$(&VAR$;ALTSTACK,WIPE)
90606        MAT PUSHVALUE$(1)
90608        LET PUSHVALUE$(1)=VAR$
90610        LET FNPUSH$(MAT PUSHVALUE$,ALTSTACK,WIPE)
90612        IF WIPE THEN LET VAR$=""
90614     FNEND 
90616     DEF FNPOPVALUE$(&VAR$;ALTSTACK)
90618        LET FNPOP$(MAT PUSHVALUE$,ALTSTACK)
90620        LET VAR$=PUSHVALUE$(1)
90622     FNEND 
90624     DEF FNPUSHVALUE(&VAR;ALTSTACK,WIPE)
90626        MAT PUSHVALUE(1)
90628        LET PUSHVALUE(1)=VAR
90630        LET FNPUSH(MAT PUSHVALUE,ALTSTACK,WIPE)
90632        IF WIPE THEN LET VAR=0
90634     FNEND 
90636     DEF FNPOPVALUE(&VAR;ALTSTACK)
90638        LET FNPOP(MAT PUSHVALUE,ALTSTACK)
90640        LET VAR=PUSHVALUE(1)
90642     FNEND 
90644 ! 
90646     DIM PUSHWORKARRAY$(1)*4000
90648     DEF FNPUSHARRAY$(MAT ARRAY$,MAT STACK$,MAT LONGSTACK$;___,STARTINDEX,ENDINDEX,SIZE,INDEX)
90650        MAT PUSHWORKARRAY$(UDIM(MAT ARRAY$))=ARRAY$
90652        FOR INDEX=1 TO UDIM(MAT PUSHWORKARRAY$)
90654           IF LEN(PUSHWORKARRAY$(INDEX))>255 THEN 
90656              MAT LONGSTACK$(UDIM(MAT LONGSTACK$)+1)
90658              LET LONGSTACK$(UDIM(MAT LONGSTACK$))=PUSHWORKARRAY$(INDEX)
90660              LET PUSHWORKARRAY$(INDEX)="[[[loNgsTaCk]]]"
90662           END IF 
90664        NEXT INDEX
90666 ! 
90668        LET STARTINDEX=UDIM(MAT STACK$)+1
90670        LET SIZE=UDIM(MAT PUSHWORKARRAY$)
90672        LET ENDINDEX=STARTINDEX+SIZE-1
90674        MAT STACK$(ENDINDEX+1)
90676        IF SIZE THEN 
90678           MAT STACK$(STARTINDEX:ENDINDEX)=PUSHWORKARRAY$
90680        END IF 
90682        LET STACK$(ENDINDEX+1)=STR$(SIZE)
90684     FNEND 
90686     DEF FNPOPARRAY$(MAT ARRAY$,MAT STACK$,MAT LONGSTACK$;___,STARTINDEX,ENDINDEX,SIZE,INDEX)
90688        LET ENDINDEX=UDIM(MAT STACK$)-1
90690        LET SIZE=VAL(STACK$(ENDINDEX+1))
90692        LET STARTINDEX=ENDINDEX-SIZE+1
90694        MAT ARRAY$(SIZE)
90696        IF SIZE THEN 
90698           MAT ARRAY$=STACK$(STARTINDEX:ENDINDEX)
90700        END IF 
90702        MAT STACK$(STARTINDEX-1)
90704 ! 
90706        FOR INDEX=UDIM(MAT ARRAY$) TO 1 STEP -1
90708           IF ARRAY$(INDEX)="[[[loNgsTaCk]]]" THEN 
90710              LET ARRAY$(INDEX)=LONGSTACK$(UDIM(MAT LONGSTACK$))
90712              MAT LONGSTACK$(UDIM(MAT LONGSTACK$)-1)
90714           END IF 
90716        NEXT INDEX
90718     FNEND 
90720     DEF FNPUSHARRAY(MAT ARRAY,MAT STACK;___,STARTINDEX,ENDINDEX,SIZE)
90722        LET STARTINDEX=UDIM(MAT STACK)+1
90724        LET SIZE=UDIM(MAT ARRAY)
90726        LET ENDINDEX=STARTINDEX+SIZE-1
90728        MAT STACK(ENDINDEX+1)
90730        IF SIZE THEN 
90732           MAT STACK(STARTINDEX:ENDINDEX)=ARRAY
90734        END IF 
90736        LET STACK(ENDINDEX+1)=SIZE
90738     FNEND 
90740     DEF FNPOPARRAY(MAT ARRAY,MAT STACK;___,STARTINDEX,ENDINDEX,SIZE)
90742        LET ENDINDEX=UDIM(MAT STACK)-1
90744        LET SIZE=STACK(ENDINDEX+1)
90746        LET STARTINDEX=ENDINDEX-SIZE+1
90748        MAT ARRAY(SIZE)
90750        IF SIZE THEN 
90752           MAT ARRAY=STACK(STARTINDEX:ENDINDEX)
90754        END IF 
90756        MAT STACK(STARTINDEX-1)
90758     FNEND 
90760 ENDPACK: ! Done with Pack Data Functions
75004 SCREENIODIMS: ! 
75006     DIM F$(1)*1000,F(1),S$(1)*1000
75008     DIM SCREENSUBS$(1)*80
75010     DIM READ_F$(1)*1000,READ_F(1)
75012     DIM DISK_F$(1)*1000,DISK_F(1)
75014 ! 
75016     DIM SAVE_F$(1)*1000,SAVE_F(1),SAVE_S$(1)*1000
75018 ! 
75020     DIM SELECTEDKEYS$(1)*255
75022     DIM SELECTEDRECORDS(1)
75024 ! 
75026     DIM S_DATA$(1)*1000,S_DATA(1),S_SPEC$(1)*255, S_HELP$(1)*260, S_OLD$(1)*1000
75028     DIM TEMP_S_SPEC$(1)*255
75030     DIM OLD_DATA(1)
75032 ! 
75034     DIM SAVE_S_DATA$(1)*1000
75036     DIM SAVE_S_SUBS(1)
75038     DIM CHANGED_S_DATA$(1)*1000
75040     DIM CHANGED_S_SUBS(1)
75042     DIM OTHER_S_DATA$(1)*1000
75044     DIM OTHER_S_SUBS(1)
75046     DIM OTHERCHANGED_S_DATA$(1)*1000
75048     DIM OTHERCHANGED_S_SUBS(1)
75050 ! 
75052     DIM RETURNDATA$(1)*255
75054     DIM CONTROLSPEC$(1)*128
75056     DIM SCREENIOSSUBS$(1)*40
75058     DIM SCREENIONSUBS$(1)*40
75060 ! 
75062     DIM TEMPINDEX
75064     DIM TEMPCONTROL
75066     DIM TEMPFIELD
75068     DIM FOUNDALREADY
75070 ENDSCREENIODIMS: ! 
04040 SCREENDESIGNERDIMS: ! Dimension Variables
04050 ! 
04060     DIM SETTING_ENABLELOGGING
04070     DIM SETTING_PREVIEWLISTVIEWS
04080     DIM SETTING_REALTIMEFILTERS
04090     DIM SETTING_DETAILEDCOMMENTS
04100     DIM SETTING_FILEIOPATH$*255
04110     DIM SETTING_SCREENIOPATH$*255
04120     DIM SETTING_CLOCKPATH$*255
04130     DIM SETTING_BATCHFILECOMMAND$*1024
04140     DIM SETTING_BREXECUTABLE$*255
04150     DIM SETTING_IMAGEPATH$*255
04160     DIM SETTING_SCREENFOLDER$*255
04170     DIM SETTING_FUNCTIONFOLDER$*255
04180     DIM SETTING_DEBUGMODE
04190     DIM SETTING_CLICKTOMOVE
04200 ! 
04210 !  File Arrays
04220     DIM SCREENIO$(1)*255, SCREENIO(1)
04230 ! 
04240 !  Screen Control Arrays
04250     DIM CONTROLNAME$(1)*50, FIELDNAME$(1)*50, DESCRIPTION$(1)*255
04260     DIM VPOSITION(1), HPOSITION(1),FIELDTYPE$(1)*8, SPECWIDTH(1), WIDTH(1), HEIGHT(1)
04270     DIM TRUEVALUE$(1)*60, FALSEVALUE$(1)*60
04280     DIM FUNCTION$(1)*255, PICTURE$(1)*255, PARENT$(1)*20
04290     DIM FGCOLOR$(1)*6, BGCOLOR$(1)*6, JUSTIFY$(1)*1, ATTR$(1)*128, MULTISELECT(1), GRIDLINES(1)
04300     DIM PROTECTED(1), INVISIBLE(1), TOOLTIP$(1)*255, CNVRTIN$(1)*255, CNVRTOUT$(1)*255
04310     DIM USERDATA$(1)*255
04320 ! 
04330     DIM FORM$(1)*2000
04340     DIM FIELDSSSUBS$(1)*50
04350     DIM FIELDSNSUBS$(1)*50
04360 ! 
04370     DIM FRAMEWINDOWS(1)
04380     DIM FRAMEKEYS$(1)
04390     DIM FRAMESPECCONTROL$(1)*255
04400 ENDSCREENDESIGNERDIMS: ! 
